syntax = "proto3";

import "google/api/annotations.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

option go_package = "github.com/ozoncp/ocp-tenant-api/pkg/ocp-tenant-api;ocp_tenant_api";

package ocp.tenant.api;

// Service to work with tenants
service OcpTenantApi {
    // Adds a tenant to the database, giving it a specific Id.
    rpc CreateTenantV1(CreateTenantV1Request) returns (CreateTenantV1Response) {
        option (google.api.http) = {
            post: "/v1/tenant"
        };
    }

    // Provides information about the specified tenant.
    rpc DescribeTenantV1(DescribeTenantV1Request) returns (DescribeTenantV1Response) {
        option (google.api.http) = {
            get: "/v1/tenant/{tenant_id}"
        };
    }

    // Refreshes the data for the specified tenant.
    rpc UpdateTenantV1(UpdateTenantV1Request) returns (UpdateTenantV1Response) {
        option (google.api.http) = {
            put: "/v1/tenant"
        };
    }

    // Deletes one tenant.
    rpc RemoveTenantV1(RemoveTenantV1Request) returns (RemoveTenantV1Response) {
        option (google.api.http) = {
            delete: "/v1/tenant"
        };
    }

    // Returns the specified number of notes starting at the specified indentation.
    rpc ListTenantsV1(ListTenantsV1Request) returns (ListTenantsV1Response) {
        option (google.api.http) = {
            get: "/v1/tenants"
        };
    }
}

// Tenant description
message Tenant {
    uint64 Id = 1 [(validate.rules).uint64.gt = 0];
    string Name = 2;
    uint32 Type = 3;
}

message CreateTenantV1Request {
    string Name = 1;
    uint32 Type = 2;
}

message CreateTenantV1Response {
    uint64 tenant_id = 1;
}

message DescribeTenantV1Request {
    uint64 tenant_id = 1 [(validate.rules).uint64.gt = 0];
}

message DescribeTenantV1Response {
    Tenant tenant = 1;
}

message UpdateTenantV1Request {
    Tenant tenant = 1;
}

message UpdateTenantV1Response {
    bool updated = 1;
}

message ListTenantsV1Request {
    uint64 limit = 1 [(validate.rules).int64.gt = 0];
    uint64 offset = 2 [(validate.rules).int64.gt = 0];
}

message ListTenantsV1Response {
    repeated Tenant tenants = 1;
}

message RemoveTenantV1Request {
    uint64 tenant_id = 1 [(validate.rules).uint64.gt = 0];
}

message RemoveTenantV1Response {
    bool removed = 1;
}
